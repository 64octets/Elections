ret[[1]][1,1]
ret[[1]][1,2]
Sys.setlocale("LC_ALL", "Hebrew")
ret1 <- readHTMLTable(htmlTable,
header=T,
stringsAsFactors=FALSE,
as.data.frame=TRUE)
ggplot(x,aes(x=date,y=mandates,colour=party))+geom_step()+facet_wrap(~election,scales="free_x")
ret1[[1]][1,1]
ret1[[1]][1,2]
ggplot(x,aes(x=date,y=mandates))+geom_point()+facet_wrap(~party,scales="free_x")
View(x)
x[[1]]%>%View
ret[[1]]%>%View
raw[[1]]%>%View
x=llply(raw,function(df){
df=df[!(df[,2]%in%c(NA,"")),-1]
rownames(df)=NULL
df=df[which(str_detect(df[,1],"/")),]
df=df[,1:(min(which(str_detect(as.matrix(df)[1,],"%")))-1)]
data.frame(df[,str_detect(as.matrix(df[1,]),"[0-9]")])
})
x[[1]]%>%View
x[[1]]=x[[1]][,-2]
x[[3]]=x[[3]][,-2]
x[[1]]%>%View
names(x)=c("2015","2013","2009","2006","2003")
x=ldply(x,function(df){
names(df)=c("date","n",paste0("V",seq(1,ncol(df)-2)))
df$date=as.Date(df$date,"%d/%m/%Y")
df=df%>%mutate_each(funs(as.numeric(as.character(.))),-date)%>%filter(n>10)
df=melt(df,id=c("date","n"),value.name = "mandates")
},.id="election")
View(x)
x$variable=as.numeric(gsub("V","",x$variable))
x$election=as.numeric(as.character(x$election))
x=left_join(x,results,by=c("variable","election"))
ggplot(x,aes(x=date,y=mandates,colour=party))+geom_step()+facet_wrap(~election,scales="free_x")
ggplot(x%>%filter(election=="2015"),aes(x=date,y=mandates))+geom_step()+facet_wrap(~party,scales="free_x")
Sys.setlocale("LC_ALL", "Hebrew")
pkg=c("plyr","dplyr","reshape2","ggplot2","XML","stringr","shiny","shinyapps")
sapply(pkg,require,character.only = T,warn.conflicts = F,quietly = T)
rm(pkg)
runApp("C:\\Users\\yoni\\Documents\\GitHub\\Elections")
runApp("C:\\Users\\yoni\\Documents\\GitHub\\Elections")
runApp("C:\\Users\\yoni\\Documents\\GitHub\\Elections")
runApp("C:\\Users\\yoni\\Documents\\GitHub\\Elections")
runApp("C:\\Users\\yoni\\Documents\\GitHub\\Elections")
runApp("C:\\Users\\yoni\\Documents\\GitHub\\Elections")
runApp("C:\\Users\\yoni\\Documents\\GitHub\\Elections")
runApp("C:\\Users\\yoni\\Documents\\GitHub\\Elections")
runApp("C:\\Users\\yoni\\Documents\\GitHub\\Elections")
runApp("C:\\Users\\yoni\\Documents\\GitHub\\Elections")
runApp("C:\\Users\\yoni\\Documents\\GitHub\\Elections")
runApp("C:\\Users\\yoni\\Documents\\GitHub\\Elections")
runApp("C:\\Users\\yoni\\Documents\\GitHub\\Elections")
runApp("C:\\Users\\yoni\\Documents\\GitHub\\Elections")
runApp("C:\\Users\\yoni\\Documents\\GitHub\\Elections")
runApp("C:\\Users\\yoni\\Documents\\GitHub\\Elections",launch.browser = T)
list(png="PNG",pdf="PDF")
list("PNG"=png,pdf="PDF")
a=c(3,3)
split(a)
split(a[1],a[2])
split(c("pdf","png"),c("PDF","PNG"))
list(png="PNG",pdf="PDF")
runApp("C:\\Users\\yoni\\Documents\\GitHub\\Elections")
runApp("C:\\Users\\yoni\\Documents\\GitHub\\Elections")
runApp("C:\\Users\\yoni\\Documents\\GitHub\\Elections")
runApp("C:\\Users\\yoni\\Documents\\GitHub\\Elections",launch.browser = T)
runApp("C:\\Users\\yoni\\Documents\\GitHub\\Elections",launch.browser = T)
runApp("C:\\Users\\yoni\\Documents\\GitHub\\Elections",launch.browser = T)
runApp("C:\\Users\\yoni\\Documents\\GitHub\\Elections",launch.browser = T)
runApp("C:\\Users\\yoni\\Documents\\GitHub\\Elections")
0.45*23
.045*23
.955*23
x=read.csv(file="C://Users//yoni//Documents//GitHub//Elections//election_data.csv")
View(x)
x$sample[1]
x$Sample[1]
1/sqrt(x$Sample[1])
ggplot(x%>%filter(Election==2015),aes(x=Date,y=Mandates))+geom_line()+facet_wrap(~Party)
ggplot(x%>%filter(Election==2015),aes(x=as.Date(Date),y=Mandates))+geom_line()+facet_wrap(~Party)
1/sqrt(x$Sample[1])
(1-1/sqrt(x$Sample[1]))*x$Mandates[1]
(1+1/sqrt(x$Sample[1]))*x$Mandates[1]
ggplot(x%>%filter(Election==2015),aes(x=as.Date(Date),y=Mandates))+
geom_line()+facet_wrap(~Party)+geom_ribbon(aes(ymin=(1-sqrt(Sample))*Mandates,ymax=(1+sqrt(Sample))*Mandates),alpha=.25)
ggplot(x%>%filter(Election==2015),aes(x=as.Date(Date),y=Mandates,colour=Party))+
geom_line()+facet_wrap(~Party,"free_y")+geom_ribbon(aes(ymin=(1-sqrt(Sample))*Mandates,
ymax=(1+sqrt(Sample))*Mandates),alpha=.25)
ggplot(x%>%filter(Election==2015),aes(x=as.Date(Date),y=Mandates,colour=Party))+
geom_line()+facet_wrap(~Party,"free_y")+
geom_ribbon(aes(ymin=(1-sqrt(Sample))*Mandates,ymax=(1+sqrt(Sample))*Mandates),alpha=.25)
ggplot(x%>%filter(Election==2015),aes(x=as.Date(Date),y=Mandates,colour=Party))+
geom_line()+facet_wrap(~Party,scales="free_y")+
geom_ribbon(aes(ymin=(1-sqrt(Sample))*Mandates,ymax=(1+sqrt(Sample))*Mandates),alpha=.25)
ggplot(x%>%filter(Election==2015),aes(x=as.Date(Date),y=Mandates,colour=Party))+
geom_line()+facet_wrap(~Party,scales="free_y")+
geom_ribbon(aes(ymin=(1-sqrt(Sample))*Mandates,ymax=(1+sqrt(Sample))*Mandates,fill=Party),alpha=.25)
ggplot(x%>%filter(Election==2015),aes(x=as.Date(Date),y=Mandates,colour=Party))+
geom_line()+facet_wrap(~Party,scales="free_x")+
geom_ribbon(aes(ymin=(1-1/sqrt(Sample))*Mandates,ymax=(1+1/sqrt(Sample))*Mandates,fill=Party),alpha=.25)
ggplot(x%>%filter(Election==2015),aes(x=as.Date(Date),y=Mandates,colour=Party))+
geom_step()+facet_wrap(~Party,scales="free_x")+
geom_ribbon(aes(ymin=(1-1/sqrt(Sample))*Mandates,ymax=(1+1/sqrt(Sample))*Mandates,fill=Party),alpha=.25)
library(proto)
stairstepn <- function( data, direction="hv", yvars="y" ) {
direction <- match.arg( direction, c( "hv", "vh" ) )
data <- as.data.frame( data )[ order( data$x ), ]
n <- nrow( data )
if ( direction == "vh" ) {
xs <- rep( 1:n, each = 2 )[ -2 * n ]
ys <- c( 1, rep( 2:n, each = 2 ) )
} else {
ys <- rep( 1:n, each = 2 )[ -2 * n ]
xs <- c( 1, rep( 2:n, each = 2))
}
data.frame(
x = data$x[ xs ]
, data[ ys, yvars, drop=FALSE ]
, data[ xs, setdiff( names( data ), c( "x", yvars ) ), drop=FALSE ]
)
}
stat_stepribbon <- function( mapping=NULL, data=NULL, geom="ribbon", position="identity" ) {
StatStepribbon$new( mapping=mapping, data=data, geom=geom, position=position )
}
StatStepribbon <- proto(ggplot2:::Stat, {
objname <- "stepribbon"
desc <- "Stepwise area plot"
desc_outputs <- list(
x = "stepped independent variable",
ymin = "stepped minimum dependent variable",
ymax = "stepped maximum dependent variable"
)
required_aes <- c( "x", "ymin", "ymax" )
default_geom <- function(.) GeomRibbon
default_aes <- function(.) aes( x=..x.., ymin = ..y.., ymax=Inf )
calculate <- function( ., data, scales, direction = "hv", yvars = c( "ymin", "ymax" ), ...) {
stairstepn( data = data, direction = direction, yvars = yvars )
}
examples <- function(.) {
DF <- data.frame( x = 1:3, ymin = runif( 3 ), ymax=rep( Inf, 3 ) )
ggplot( DF, aes( x=x, ymin=ymin, ymax=ymax ) ) + stat_stepribbon()
}
})
dta <- read.table( text=
"Indep   Dep   DepLim
0        0.5   2
1        1.5   Inf
2        2.5   Inf
", header=TRUE, as.is=TRUE )
limmaxy <- 3
ggplot( dta, aes( x=Indep, y=Dep ) ) +
geom_step( size=2, direction="hv" ) +
geom_ribbon( aes( x=Indep, ymin=Dep, ymax=DepLim ), stat="stepribbon", fill="blue", alpha=0.3, direction="hv" ) +
coord_cartesian( ylim=c( 0, limmaxy ) )
p=ggplot(x%>%filter(Election==2015),aes(x=as.Date(Date),y=Mandates,colour=Party))+
geom_step()+facet_wrap(~Party,scales="free_x")+
geom_ribbon(stat="stepribbon",aes(ymin=(1-1/sqrt(Sample))*Mandates,ymax=(1+1/sqrt(Sample))*Mandates,fill=Party),alpha=.25)
p
p=ggplot(x%>%filter(Election==2015),aes(x=as.Date(Date),y=Mandates,colour=Party))+
geom_step()+facet_wrap(~Party,scales="free")+
geom_ribbon(stat="stepribbon",aes(ymin=(1-1/sqrt(Sample))*Mandates,ymax=(1+1/sqrt(Sample))*Mandates,fill=Party),alpha=.25)
p
x%>%select(Party,Partyid)%>%distinct%>%View
ggplot(x%>%filter(Election==2015&Partyid==5),aes(x=as.Date(Date),y=Mandates,colour=Party))+
geom_step()+facet_wrap(~Party,scales="free")+
geom_ribbon(stat="stepribbon",aes(ymin=(1-1/sqrt(Sample))*Mandates,ymax=(1+1/sqrt(Sample))*Mandates,fill=Party),alpha=.25)
x%>%select(Party,Partyid)%>%distinct%>%View
ggplot(x%>%filter(Election==2015&Partyid%in%c(5,7)),
aes(x=as.Date(Date),y=Mandates,colour=Party))+geom_step()+
geom_ribbon(stat="stepribbon",aes(ymin=(1-1/sqrt(Sample))*Mandates,ymax=(1+1/sqrt(Sample))*Mandates,fill=Party),alpha=.25)
ggplot(x%>%filter(Election==2015&Partyid%in%c(5,7)&format(Date,"%Y")==2015),
aes(x=as.Date(Date),y=Mandates,colour=Party))+geom_step()+
geom_ribbon(stat="stepribbon",aes(ymin=(1-1/sqrt(Sample))*Mandates,ymax=(1+1/sqrt(Sample))*Mandates,fill=Party),alpha=.25)
ggplot(x%>%filter(Election==2015&Partyid%in%c(5,7)&format(as.Date(Date),"%Y")==2015),
aes(x=as.Date(Date),y=Mandates,colour=Party))+geom_step()+
geom_ribbon(stat="stepribbon",aes(ymin=(1-1/sqrt(Sample))*Mandates,ymax=(1+1/sqrt(Sample))*Mandates,fill=Party),alpha=.25)
ggplot(x%>%filter(Election==2015&Partyid%in%c(5,7)&format(as.Date(Date),"%Y")==2015),
aes(x=as.Date(Date),y=Mandates,colour=Party))+geom_line()+
geom_ribbon(aes(ymin=(1-1/sqrt(Sample))*Mandates,ymax=(1+1/sqrt(Sample))*Mandates,fill=Party),alpha=.25)
ggplot(x%>%filter(Election==2015&Partyid%in%c(5,7)&format(as.Date(Date),"%Y")==2015),
aes(x=as.Date(Date),y=Mandates,colour=Party))+geom_point()+
geom_ribbon(aes(ymin=(1-1/sqrt(Sample))*Mandates,ymax=(1+1/sqrt(Sample))*Mandates,fill=Party),alpha=.25)
ggplot(x%>%filter(Election==2015&Partyid%in%c(5,7)&format(as.Date(Date),"%Y")==2015),
aes(x=as.Date(Date),y=Mandates,colour=Party))+geom_point()+
geom_ribbon(stat="stepribbon",aes(ymin=(1-1/sqrt(Sample))*Mandates,ymax=(1+1/sqrt(Sample))*Mandates,fill=Party),alpha=.25)
ggplot(x%>%filter(Election==2015&Partyid%in%c(5,7)&format(as.Date(Date),"%Y")==2015),
aes(x=as.Date(Date),y=Mandates,colour=Party))+geom_point()+
geom_errorbar(aes(ymin=(1-1/sqrt(Sample))*Mandates,ymax=(1+1/sqrt(Sample))*Mandates,fill=Party),alpha=.25)
ggplot(x%>%filter(Election==2015&Partyid%in%c(5,7)&format(as.Date(Date),"%Y")==2015),
aes(x=as.Date(Date),y=Mandates,colour=Party))+geom_point()+
geom_errorbar(aes(ymin=(1-1/sqrt(Sample))*Mandates,ymax=(1+1/sqrt(Sample))*Mandates))
ggplot(x%>%filter(Election==2015&Partyid%in%c(5,7)&format(as.Date(Date),"%Y")==2015),
aes(x=as.Date(Date),y=Mandates,colour=Party))+geom_point()+
geom_errorbar(aes(ymin=(1-1/sqrt(Sample))*Mandates,ymax=(1+1/sqrt(Sample))*Mandates),linetype=2)
ggplot(x%>%filter(Election==2015&Partyid%in%c(5,7)&format(as.Date(Date),"%Y")==2015),
aes(x=as.Date(Date),y=Mandates,colour=Party))+geom_point()+
geom_errorbar(aes(ymin=(1-1/sqrt(Sample))*Mandates,ymax=(1+1/sqrt(Sample))*Mandates),linetype=3)
ggplot(x%>%filter(Election==2015&Partyid%in%c(5,7)&format(as.Date(Date),"%Y")==2015),
aes(x=as.Date(Date),y=Mandates,colour=Party))+geom_point()+facet_wrap(~Party,scales="free")
geom_errorbar(aes(ymin=(1-1/sqrt(Sample))*Mandates,ymax=(1+1/sqrt(Sample))*Mandates))
ggplot(x%>%filter(Election==2015&Partyid%in%c(5,7)&format(as.Date(Date),"%Y")==2015),
aes(x=as.Date(Date),y=Mandates,colour=Party))+geom_point()+facet_wrap(~Party,scales="free")+
geom_errorbar(aes(ymin=(1-1/sqrt(Sample))*Mandates,ymax=(1+1/sqrt(Sample))*Mandates))
Sys.Date()
require(devtools)
require(devtools)
install_github('poirot', 'ramnathv')
install_github('ramnathv/poirot')
install_github('ramnathv/slidify', ref = 'dev')
install_github('slidifyLibraries', 'ramnathv')
install_github('ramnathv/poirot')
library("poirot", lib.loc="~/R/win-library/3.1")
library(yaml)
install.packages("R2HTML")
library(R2HTML)
library("rmarkdown", lib.loc="~/R/win-library/3.1")
library("markdown", lib.loc="~/R/win-library/3.1")
detach("package:rmarkdown", unload=TRUE)
detach("package:markdown", unload=TRUE)
install.packages("markdown")
View(data.frame(x="יוני"))
View(data.frame(x="יוני"))
x=data.frame(x="יוני")
x$x
iconv(x$x,"UTF-8")
iconv(as.character(x$x),"UTF-8")
iconv(as.character(x$x),"Window-1255")
View(data.frame(x="יוני"))
View(data.frame(x="יוני"))
View(data.frame(x="יוני"))
View(data.frame(x="יוני"))
View(data.frame(x="יוני"))
Sys.getlocale()
View(data.frame(x="יוני"))
View(data.frame(x="יוני"))
View(data.frame(x="יוני"))
View(data.frame(x="יוני"))
View(data.frame(x="יוני"))
View(data.frame(x="יוני"))
Sys.setlocale("LC_ALL", "Hebrew")
View(data.frame(x="יוני"))
Sys.setlocale("LC_ALL", "iso-8859-8")
Sys.setlocale("LC_ALL", "hebrew")
Sys.setlocale("LC_ALL", "english")
View(data.frame(x="יוני"))
Sys.setlocale("LC_ALL", "cp1255")
Sys.setlocale("LC_ALL", "CP1255")
Sys.setlocale("LC_ALL", "hebrew")
View(data.frame(x="יוני"))
View(data.frame(x="יוני"))
data.frame(x="יוני")
"יוני"
iconv("יוני",to = "windows-1255")
iconv("יוני",to = "utf-8")
iconv("יוני",to = "cp1255")
iconv("יוני",to = "latin1")
iconv("יוני",to = "latin")
iconv("יוני",to = "latin1")
iconv("יוני",to = "latin-1")
iconv("יוני",to = "utf-8")
Encoding("יוני")
iconv("יוני",to = "windows-1255")
למךלמ
"למךלמ"
Sys.setlocale("LC_ALL", "Hebrew")
"למךלמ"
Sys.setlocale("LC_ALL", "Hebrew_Israel.28598")
temp="יוני"
temp
View(temp)
Sys.setlocale("LC_ALL", "English_US")
temp
View(temp)
Sys.setlocale("LC_ALL", "English_US")
temp="יוני"
temp
View(temp)
Sys.setlocale("LC_ALL", "Hebrew_Israel.862")
temp="יוני"
temp
Sys.setlocale("LC_ALL", "Hebrew_Israel.1255")
temp="יוני"
temp
View(temp)
x=c(862,1255,28598,38598)
temp="יוני"
temp
View(temp)
Sys.setlocale("LC_ALL", "Hebrew_Israel.1255")
temp="יוני"
temp
View(temp)
x=paste("Hebrew_Israel",c(862,1255,28598,38598),".")
Sys.setlocale("LC_ALL", x[1])
x[1]
x=paste("Hebrew_Israel",c(862,1255,28598,38598),sep=".")
Sys.setlocale("LC_ALL", x[1])
temp="יוני"
temp
Sys.setlocale("LC_ALL", x[2])
temp="יוני"
temp
View(temp)
Sys.setlocale("LC_ALL", x[3])
temp="יוני"
temp
View(temp)
Sys.setlocale("LC_ALL", x[4])
temp="יוני"
temp
View(temp)
Sys.setlocale("LC_ALL", x[4])
temp="יוני"
temp
View(temp)
Sys.setlocale("LC_ALL", x[4])
temp="יוני"
temp
View(temp)
x=paste("Hebrew_Israel",c(862,1255,28598,38598),sep=".")
Sys.setlocale("LC_ALL", x[4])
temp="יוני"
temp
View(temp)
Sys.setlocale("LC_ALL", x[2])
temp="יוני"
temp
View(temp)
Sys.setlocale("LC_ALL", x[2])
temp="יוני"
temp
View(temp)
temp="יוני"
temp
View(temp)
Sys.setlocale("LC_ALL", x[2])
temp="יוני"
temp
View(temp)
Sys.getlocale()
Sys.setlocale("LC_ALL", "american_usa")
temp="יוני"
temp
View(temp)
Sys.setlocale("LC_ALL", x[2])
temp="יוני"
temp
View(temp)
View(temp,Encoding="utf-8")
View
.rs.callAs(temp)
options(shiny.usecairo)
options("")
options("shiny.usecairo")
options()
localeToCharset()
options(encoding = 'UTF-8')
localeToCharset()
Sys.setlocale("LC_ALL", x[2])
temp="יוני"
temp
View(temp)
options(encoding = 'UTF-8')
Sys.getlocale()
options(encoding = 'Windows-1255.UTF-8')
temp="יוני"
temp
View(temp)
options(encoding = 'native.enc')
Sys.getlocale()
Encoding()
Encoding
Encoding(temp)
iconv(temp,to = "UTF-8")
View(iconv(temp,to = "UTF-8"))
temp=iconv(temp,to = "UTF-8")
temp
View(temp)
enc2native(temp)
View(enc2native(temp))
View(enc2utf8(temp))
temp=enc2utf8(temp)
temp
View(temp)
Sys.localeconv()
shiny::runApp('GitHub/whiteboard')
x0=c("English_US",paste("Hebrew_Israel",c(862,1255,28598,38598),sep="."))
Sys.setlocale("LC_ALL", x0[3])
setwd("C:\\Users\\yoni\\Documents\\GitHub\\Elections")
library(plyr)
library(dplyr)
library(reshape2)
library(XML)
library(stringr)
library(ggplot2)
library(httr)
library(shinyAce)
loc.run="windows-1255"
x.old=read.csv("election_data.csv",stringsAsFactors=F,fileEncoding=loc.run)%>%mutate(Date=as.Date(Date))
attribute=read.csv("election_results.csv",stringsAsFactors=F,fileEncoding=loc.run)
Poll=read.csv("Pollster_En.csv",stringsAsFactors=F,fileEncoding=loc.run)
fac_vars.df=read.csv("fac_vars.csv",stringsAsFactors=F,fileEncoding=loc.run)
fac_vars=fac_vars.df[,1]
#Fetch 2015 data
url="https://docs.google.com/spreadsheets/d/1-Xr5gb-HfO08RaP3Y5s6YBs9Uvv0JenZGnvPsqsyBNc/pubhtml?gid=0&single=true"
doc <- content(GET(url),as="text",encoding="UTF-8")
htmlTable <- gsub("^.*?(<table.*</table).*$", "\\1>", doc)
tableNodes = getNodeSet(htmlParse(htmlTable,encoding="UTF-8"), "//table")
ret=readHTMLTable(tableNodes[[1]],header=T,stringsAsFactors=FALSE,
as.data.frame=TRUE,row.names = NULL,encoding="windows-1255")
#Clean Data
df=as.data.frame(ret[-1,-1])
names(df)=c(as.character(ret[1,2:6]),paste0("V",seq(1:11)))
df$Date=as.Date(df$Date,"%m/%d/%Y")
df=df%>%mutate_each(funs(as.numeric(as.character(.))),-c(Date,Publisher,Pollster,Type))
df=melt(df,id=names(df)[1:5],value.name = "Mandates",variable.name="Party")%>%
mutate(Party=str_replace_all(as.character(factor(Party,labels=ret[1,7:17])),'\"',""),
Party=str_replace(Party,
"הרשימה המשותפת"
,"רשימה משותפת ערבית"
),
Publisher=str_replace_all(Publisher,"!",""),
Election=2015)
#Combine to Old Data
simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1,1)), substring(s, 2),
sep="", collapse=" ")
}
x=rbind(df,x.old)%>%filter(!is.na(Mandates))%>%
mutate(Mandate.Group=cut(Mandates,breaks = c(0,1,5,10,15,20,30,50),include.lowest = T))%>%
distinct
x$Publisher=sapply(x$Publisher,simpleCap)
x=join(x,attribute,by=c("Election","Party"))
x=left_join(x,Poll%>%select(Publisher,Publisher.En)%>%distinct,by=c("Publisher"))
x=left_join(x,Poll%>%select(Pollster,Pollster.En)%>%distinct,by=c("Pollster"))
x=left_join(x,x%>%select(Election,Pollster,Date)%>%unique%>%count(Election,Pollster),by=c("Election","Pollster"))%>%
rename(N=n)%>%mutate(Error=Mandates-Results,Error.abs=abs(Mandates-Results),week=format(Date,"%w"),month=format(Date,"%m"),year=format(Date,"%Y"))%>%
arrange(desc(Date),Election,Publisher,desc(Mandates))%>%ungroup
# Pollster_Error=x%>%filter(Election!=2015)%>%group_by(Election,Pollster,Date)%>%summarise(PollErr=sqrt(sum(Error.abs^2,na.rm = T)))
# Pollster_Error_Mean=x1%>%group_by(Election,Pollster)%>%summarise(PollErr=mean(PollErr))
#
# Pollster_Party_Error=x%>%filter(Election!=2015)%>%group_by(Election,Pollster,Party,Date)%>%summarise(PollErr=sum(Error,na.rm = T))
# Pollster_Party_Error_Mean=Pollster_Party_Error%>%group_by(Election,Pollster,Party)%>%summarise(PollPartyErr=mean(PollErr))
#
# ggplot(Pollster_Party_Error%>%ungroup%>%mutate(Election=factor(Election)),
#        aes(x=Pollster,y=PollErr,fill=Pollster))+geom_boxplot()+facet_wrap(~Election)+theme_bw()
x=x%>%mutate(Partyid=as.numeric(factor(str_trim(Party))),
Pollsterid=as.numeric(factor(str_trim(Pollster))),
Publisherid=as.numeric(factor(str_trim(Publisher))),
Election.Date=as.Date(factor(Election,labels=c("2003-01-28","2006-03-28","2009-02-10","2013-01-22","2015-03-17"))),
DaysLeft=as.numeric(Election.Date-Date),
Sample.Error=1/sqrt(Sample),
Mandates.lb=floor(Mandates*(1-Sample.Error)),
Mandates.ub=floor(Mandates*(1+Sample.Error)))
x$Ideology=factor(x$Ideology)
x$Ideology.Group=factor(x$Ideology.Group)
x1=x%>%filter(Election==2015)%>%select(Party.En,DaysLeft,Pollster.En,Mandates)%>%arrange(Pollster.En,Party.En,desc(DaysLeft))%>%
group_by(Party.En,Pollster.En)%>%mutate(dMandates=Mandates-lag(Mandates))
ggplot(x1,aes(x=Party.En,y=Mandates,colour=dMandates))+geom_point()+scale_colour_gradient(low="red",high="green")
#Clean Workspace
rm(list=ls(pattern = ("[^x*|fac_vars|fac_vars.df]")))
remove_geom <- function(ggplot2_object, geom_type) {
layers <- lapply(ggplot2_object$layers, function(x) if(x$geom$objname == geom_type) NULL else x)
layers <- layers[!sapply(layers, is.null)]
ggplot2_object$layers <- layers
ggplot2_object
}
shiny::runApp('~/GitHub/whiteboard')
shiny::runApp('~/GitHub/whiteboard')
shiny::runApp('~/GitHub/whiteboard')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
x%>%filter(Date==max(Date))%>%group_by(Pollster,Ideology)%>%mutate(MandatesC=cumsum(Mandates))
x%>%filter(Date==max(Date))%>%group_by(Pollster,Ideology)%>%mutate(MandatesC=cumsum(Mandates))%>%select(MMandatesC)
x%>%filter(Date==max(Date))%>%group_by(Pollster,Ideology)%>%mutate(MandatesC=cumsum(Mandates))%>%select(MandatesC)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
View(fac_vars.df)
