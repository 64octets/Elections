View(factor(1:100))
warnings
warnings()
a=factor(1:100)
b=data.frame(a=a)
View(b)
View(factor(1:10))
View(factor(1:20))
View(factor(1:30))
View(factor(1:40))
View(factor(1:50))
View(factor(1:60))
library(DT)
library("DT", lib.loc="~/R/win-library/3.1")
datatable(attribute)
library(shiny)
detach(DT)
detach("package:DT", unload=TRUE)
library(shiny)
runGitHub("Elections","yonicd")
runGitHub("Elections","yonicd")
runGitHub("Elections","yonicd")
runGitHub("Elections","yonicd")
install.packages("haven")
runGitHub("Elections","yonicd")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
options=list(height=500)
####The Israel Election Polls Analysis Depot is an interactive web application for analysing the elections in Israel powered by the [Shiny library of RStudio](http://shiny.rstudio.com/) and realtime published polling data from the [Project 61](http://infomeyda.com/) database.
####The App can be found on the [shiny servers](https://yonicd.shinyapps.io/Elections) or can be run through github
runGitHub("Elections","yonicd")
```{r,echo=F}
shinyApp(
ui=fluidPage(
selectInput("region","Region:",choices=colnames(WorldPhones)),
plotOutput("phonePlot")),
server=function(input,output){
output$phonePlot=renderPlot({
barplot(WorldPhones[,input$region]*1000,ylab="Phones",xlab="Year")
})
},
options=list(height=500)
)
library("rmarkdown", lib.loc="~/R/win-library/3.1")
rmarkdown::run()
rmarkdown::run("README.md")
rmarkdown::run("README.md")
runGitHub("Elections","yonicd")
runGitHub("Elections","yonicd")
View(fac_vars)
View(fac_vars)
paste(fac_vars,collapse=",")
runGitHub("Elections","yonicd")
library(plyr)
library(dplyr)
library(reshape2)
library(XML)
library(stringr)
library(ggplot2)
library(httr)
library(shinyAce)
library(scales)
#library(png)
#library(grid)
#library(gridExtra)
loc.run="windows-1255"
x.old=read.csv("election_data.csv",stringsAsFactors=F,fileEncoding=loc.run)%>%mutate(Date=as.Date(Date))
attribute=read.csv("election_results.csv",stringsAsFactors=F,fileEncoding=loc.run)
Poll=read.csv("Pollster_En.csv",stringsAsFactors=F,fileEncoding=loc.run)
ProjectScore=read.csv("ProjectScore.csv",stringsAsFactors=F,fileEncoding=loc.run)
fac_vars.df=read.csv("fac_vars.csv",stringsAsFactors=F,fileEncoding=loc.run)
fac_vars=fac_vars.df[,1]
#Fetch 2015 data
url="https://docs.google.com/spreadsheets/d/1-Xr5gb-HfO08RaP3Y5s6YBs9Uvv0JenZGnvPsqsyBNc/pubhtml?gid=0&single=true"
doc <- content(GET(url),as="text",encoding="UTF-8")
htmlTable <- gsub("^.*?(<table.*</table).*$", "\\1>", doc)
tableNodes = getNodeSet(htmlParse(htmlTable,encoding="UTF-8"), "//table")
ret=readHTMLTable(tableNodes[[1]],header=T,stringsAsFactors=FALSE,
as.data.frame=TRUE,row.names = NULL,encoding="windows-1255")
#Clean Data
df=as.data.frame(ret[-1,-1])
names(df)=c(as.character(ret[1,2:6]),paste0("V",seq(1:11)))
df$Date=as.Date(df$Date,"%m/%d/%Y")
df=df%>%mutate_each(funs(as.numeric(as.character(.))),-c(Date,Publisher,Pollster,Type))
df=melt(df,id=names(df)[1:5],value.name = "Mandates",variable.name="Party")%>%
mutate(Party=str_replace_all(as.character(factor(Party,labels=ret[1,7:17])),'\"',""),
Party=str_replace(Party,
"הרשימה המשותפת"
,"רשימה משותפת ערבית"
),
Publisher=str_replace_all(Publisher,"!",""),
Election=2015)
#Combine to Old Data
simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1,1)), substring(s, 2),
sep="", collapse=" ")
}
x=rbind(df,x.old)%>%filter(!is.na(Mandates))%>%
mutate(Mandate.Group=cut(Mandates,breaks = c(0,1,5,10,15,20,30,50),include.lowest = T))%>%
distinct
x$Publisher=sapply(x$Publisher,simpleCap)
x=join(x,attribute,by=c("Election","Party"))
x=left_join(x,Poll%>%select(Publisher,Publisher.En)%>%distinct,by=c("Publisher"))
x=left_join(x,Poll%>%select(Pollster,Pollster.En)%>%distinct,by=c("Pollster"))
x=left_join(x,x%>%select(Election,Pollster,Date)%>%unique%>%count(Election,Pollster),by=c("Election","Pollster"))%>%
rename(N=n)%>%mutate(Error=Mandates-Results,Error.abs=abs(Mandates-Results),week=format(Date,"%w"),month=format(Date,"%m"),year=format(Date,"%Y"))%>%
arrange(desc(Date),Election,Publisher,desc(Mandates))%>%ungroup
# Pollster_Error=x%>%filter(Election!=2015)%>%group_by(Election,Pollster,Date)%>%summarise(PollErr=sqrt(sum(Error.abs^2,na.rm = T)))
# Pollster_Error_Mean=x1%>%group_by(Election,Pollster)%>%summarise(PollErr=mean(PollErr))
#
# Pollster_Party_Error=x%>%filter(Election!=2015)%>%group_by(Election,Pollster,Party,Date)%>%summarise(PollErr=sum(Error,na.rm = T))
# Pollster_Party_Error_Mean=Pollster_Party_Error%>%group_by(Election,Pollster,Party)%>%summarise(PollPartyErr=mean(PollErr))
#
# ggplot(Pollster_Party_Error%>%ungroup%>%mutate(Election=factor(Election)),
#        aes(x=Pollster,y=PollErr,fill=Pollster))+geom_boxplot()+facet_wrap(~Election)+theme_bw()
x=x%>%mutate(Partyid=as.numeric(factor(str_trim(Party))),
Pollsterid=as.numeric(factor(str_trim(Pollster))),
Publisherid=as.numeric(factor(str_trim(Publisher))),
Election.Date=as.Date(factor(Election,labels=c("2003-01-28","2006-03-28","2009-02-10","2013-01-22","2015-03-17"))),
DaysLeft=as.numeric(Election.Date-Date),
Sample.Error=1/sqrt(Sample),
Mandates.lb=floor(Mandates*(1-Sample.Error)),
Mandates.ub=floor(Mandates*(1+Sample.Error)))
x$Ideology=factor(x$Ideology)
x$Ideology.Group=factor(x$Ideology.Group)
#Clean Workspace
remove_geom <- function(ggplot2_object, geom_type) {
layers <- lapply(ggplot2_object$layers, function(x) if(x$geom$objname == geom_type) NULL else x)
layers <- layers[!sapply(layers, is.null)]
ggplot2_object$layers <- layers
ggplot2_object
}
party=x%>%filter(Election==2015&!is.na(Mandates))%>%select(Partyid,Party,Party.En)%>%unique
#Project61 adjustment
x3=x%>%filter(Election==2015)%>%select(Pollster,Date)%>%group_by(Date,Pollster)%>%filter(row_number(Pollster)==1)%>%head(.,10)
x2=left_join(x3,x%>%select(Date,Pollster,Party,Mandates,Sample.Error),by=c("Pollster","Date"))
x2=left_join(x2,x2%>%select(Date,Pollster)%>%distinct%>%mutate(x=1)%>%group_by(Pollster)%>%mutate(N=cumsum(x))%>%select(-x),by=c("Pollster","Date"))
x2=left_join(x2,ProjectScore,by=c("Pollster","Party"))%>%
mutate(Mandates.adj=Mandates-Score,Weight=sqrt(Pollster.weight-(as.numeric(max(Date)-Date))-abs(Sample.Error*50)/N))
y=sum(unique(x2$Weight))
project61=x2%>%group_by(Party)%>%summarise(base=sum(Mandates*Weight)/y)%>%ungroup%>%mutate(base=120*base/sum(base),base.floor=floor(base),pct=base/(base.floor+1),add=0,id=0,share=factor(Party,labels=c(1,1,2,3,4,5,6,6,2,7,3)))
for(i in (1:(120-sum(project61$base.floor)))){
y1=(project61%>%group_by(share)%>%summarise(group_pct=sum(base)/(sum(base.floor)+1))%>%filter(group_pct==max(group_pct)))$share
id=project61$pct==max(project61$pct[project61$share==y1])
project61$id[id]=i
project61$base.floor[id]=project61$base.floor[id]+1
project61$add[id]=project61$add[id]+1
project61$pct[id]=project61$base[id]/(project61$base.floor[id]+1)}
project61=left_join(project61%>%select(Party,Mandates=base.floor),attribute%>%filter(Election==2015)%>%select(Party,Ideology),by="Party")%>%mutate(Date=max(x3$Date),Pollster="פרויקט 61")%>%
arrange(desc(Date),desc(Mandates))%>%ungroup
rm(list=ls(pattern = ("[^x*|fac_vars|fac_vars.df|project61|party|remove_geom]")))
input=data.frame(poll=c(1,2))
a=x%>%mutate(Dateid=factor(Date),DatePoll=factor(paste(Dateid,Pollsterid,sep=".")))
nt=tail(levels(a$DatePoll),input$poll[2])
nt=tail(nt,input$poll[2]-input$poll[1]-1)
input=data.frame(Boot=500)
a=a%>%filter(DatePoll%in%nt)
a$nr=1:nrow(a)
out=ddply(a%>%select(Mandates.lb,Mandates.ub,nr),.(nr),
.fun = function(df) {
B=input$Boot
mout=cbind(as.matrix(sample(as.numeric(df[1]):as.numeric(df[2]),B,replace=T),ncol=1),1:B)
})
names(out)[-1]=c("rMandates","bs.id")
a=left_join(out,a,by=c("nr"))
a=a%>%group_by(bs.id,Party)%>%summarise_each(funs(mean(.,na.rm = T)),Mandates,rMandates)%>%
mutate(rMandates=ifelse(floor(rMandates)<4,0,floor(rMandates)),
Mandates=ifelse(floor(Mandates)<4,0,floor(Mandates)))%>%arrange(Party)
df=melt(a,id=c("bs.id","Party"),value.name = "base")
df$base=df$base+runif(nrow(df))*1e-3
df=df%>%group_by(bs.id,variable)%>%
mutate(base=120*base/sum(base),
base.floor=floor(base),
pct=base/(base.floor+1),
add=0,id=0,
share=factor(Party,labels=c(1,1,2,3,4,5,6,6,2,7,3)))
#hagenbach-bischoff system
df=ddply(df,.(bs.id,variable),.fun = function(df){
for(i in (1:(120-sum(df$base.floor)))){
y1=(df%>%group_by(share)%>%summarise(group_pct=sum(base)/(sum(base.floor)+1))%>%filter(group_pct==max(group_pct)))$share
id=df$pct%in%max(df$pct[df$share==y1])
df$id[id]=i
df$base.floor[id]=df$base.floor[id]+1
df$add[id]=df$add[id]+1
df$pct[id]=df$base[id]/(df$base.floor[id]+1)}
return(df)
})
Party.En=x%>%filter(Election==2015)%>%select(Party,Party.En)%>%unique
df=left_join(df,Party.En,by="Party")
fill_var="Party"
pos="dodge"
yint=4
b.id=sample(1:input$Boot,1)
setwd("C:\\Users\\yoni\\Documents\\GitHub\\Elections")
library(plyr)
library(dplyr)
library(reshape2)
library(XML)
library(stringr)
library(ggplot2)
library(httr)
library(shinyAce)
library(scales)
#library(png)
#library(grid)
#library(gridExtra)
loc.run="windows-1255"
x.old=read.csv("election_data.csv",stringsAsFactors=F,fileEncoding=loc.run)%>%mutate(Date=as.Date(Date))
attribute=read.csv("election_results.csv",stringsAsFactors=F,fileEncoding=loc.run)
Poll=read.csv("Pollster_En.csv",stringsAsFactors=F,fileEncoding=loc.run)
ProjectScore=read.csv("ProjectScore.csv",stringsAsFactors=F,fileEncoding=loc.run)
fac_vars.df=read.csv("fac_vars.csv",stringsAsFactors=F,fileEncoding=loc.run)
fac_vars=fac_vars.df[,1]
#Fetch 2015 data
url="https://docs.google.com/spreadsheets/d/1-Xr5gb-HfO08RaP3Y5s6YBs9Uvv0JenZGnvPsqsyBNc/pubhtml?gid=0&single=true"
doc <- content(GET(url),as="text",encoding="UTF-8")
htmlTable <- gsub("^.*?(<table.*</table).*$", "\\1>", doc)
tableNodes = getNodeSet(htmlParse(htmlTable,encoding="UTF-8"), "//table")
ret=readHTMLTable(tableNodes[[1]],header=T,stringsAsFactors=FALSE,
as.data.frame=TRUE,row.names = NULL,encoding="windows-1255")
#Clean Data
df=as.data.frame(ret[-1,-1])
names(df)=c(as.character(ret[1,2:6]),paste0("V",seq(1:11)))
df$Date=as.Date(df$Date,"%m/%d/%Y")
df=df%>%mutate_each(funs(as.numeric(as.character(.))),-c(Date,Publisher,Pollster,Type))
df=melt(df,id=names(df)[1:5],value.name = "Mandates",variable.name="Party")%>%
mutate(Party=str_replace_all(as.character(factor(Party,labels=ret[1,7:17])),'\"',""),
Party=str_replace(Party,
"הרשימה המשותפת"
,"רשימה משותפת ערבית"
),
Publisher=str_replace_all(Publisher,"!",""),
Election=2015)
#Combine to Old Data
simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1,1)), substring(s, 2),
sep="", collapse=" ")
}
x=rbind(df,x.old)%>%filter(!is.na(Mandates))%>%
mutate(Mandate.Group=cut(Mandates,breaks = c(0,1,5,10,15,20,30,50),include.lowest = T))%>%
distinct
x$Publisher=sapply(x$Publisher,simpleCap)
x=join(x,attribute,by=c("Election","Party"))
x=left_join(x,Poll%>%select(Publisher,Publisher.En)%>%distinct,by=c("Publisher"))
x=left_join(x,Poll%>%select(Pollster,Pollster.En)%>%distinct,by=c("Pollster"))
x=left_join(x,x%>%select(Election,Pollster,Date)%>%unique%>%count(Election,Pollster),by=c("Election","Pollster"))%>%
rename(N=n)%>%mutate(Error=Mandates-Results,Error.abs=abs(Mandates-Results),week=format(Date,"%w"),month=format(Date,"%m"),year=format(Date,"%Y"))%>%
arrange(desc(Date),Election,Publisher,desc(Mandates))%>%ungroup
# Pollster_Error=x%>%filter(Election!=2015)%>%group_by(Election,Pollster,Date)%>%summarise(PollErr=sqrt(sum(Error.abs^2,na.rm = T)))
# Pollster_Error_Mean=x1%>%group_by(Election,Pollster)%>%summarise(PollErr=mean(PollErr))
#
# Pollster_Party_Error=x%>%filter(Election!=2015)%>%group_by(Election,Pollster,Party,Date)%>%summarise(PollErr=sum(Error,na.rm = T))
# Pollster_Party_Error_Mean=Pollster_Party_Error%>%group_by(Election,Pollster,Party)%>%summarise(PollPartyErr=mean(PollErr))
#
# ggplot(Pollster_Party_Error%>%ungroup%>%mutate(Election=factor(Election)),
#        aes(x=Pollster,y=PollErr,fill=Pollster))+geom_boxplot()+facet_wrap(~Election)+theme_bw()
x=x%>%mutate(Partyid=as.numeric(factor(str_trim(Party))),
Pollsterid=as.numeric(factor(str_trim(Pollster))),
Publisherid=as.numeric(factor(str_trim(Publisher))),
Election.Date=as.Date(factor(Election,labels=c("2003-01-28","2006-03-28","2009-02-10","2013-01-22","2015-03-17"))),
DaysLeft=as.numeric(Election.Date-Date),
Sample.Error=1/sqrt(Sample),
Mandates.lb=floor(Mandates*(1-Sample.Error)),
Mandates.ub=floor(Mandates*(1+Sample.Error)))
x$Ideology=factor(x$Ideology)
x$Ideology.Group=factor(x$Ideology.Group)
#Clean Workspace
remove_geom <- function(ggplot2_object, geom_type) {
layers <- lapply(ggplot2_object$layers, function(x) if(x$geom$objname == geom_type) NULL else x)
layers <- layers[!sapply(layers, is.null)]
ggplot2_object$layers <- layers
ggplot2_object
}
party=x%>%filter(Election==2015&!is.na(Mandates))%>%select(Partyid,Party,Party.En)%>%unique
#Project61 adjustment
x3=x%>%filter(Election==2015)%>%select(Pollster,Date)%>%group_by(Date,Pollster)%>%filter(row_number(Pollster)==1)%>%head(.,10)
x2=left_join(x3,x%>%select(Date,Pollster,Party,Mandates,Sample.Error),by=c("Pollster","Date"))
x2=left_join(x2,x2%>%select(Date,Pollster)%>%distinct%>%mutate(x=1)%>%group_by(Pollster)%>%mutate(N=cumsum(x))%>%select(-x),by=c("Pollster","Date"))
x2=left_join(x2,ProjectScore,by=c("Pollster","Party"))%>%
mutate(Mandates.adj=Mandates-Score,Weight=sqrt(Pollster.weight-(as.numeric(max(Date)-Date))-abs(Sample.Error*50)/N))
y=sum(unique(x2$Weight))
project61=x2%>%group_by(Party)%>%summarise(base=sum(Mandates*Weight)/y)%>%ungroup%>%mutate(base=120*base/sum(base),base.floor=floor(base),pct=base/(base.floor+1),add=0,id=0,share=factor(Party,labels=c(1,1,2,3,4,5,6,6,2,7,3)))
for(i in (1:(120-sum(project61$base.floor)))){
y1=(project61%>%group_by(share)%>%summarise(group_pct=sum(base)/(sum(base.floor)+1))%>%filter(group_pct==max(group_pct)))$share
id=project61$pct==max(project61$pct[project61$share==y1])
project61$id[id]=i
project61$base.floor[id]=project61$base.floor[id]+1
project61$add[id]=project61$add[id]+1
project61$pct[id]=project61$base[id]/(project61$base.floor[id]+1)}
project61=left_join(project61%>%select(Party,Mandates=base.floor),attribute%>%filter(Election==2015)%>%select(Party,Ideology),by="Party")%>%mutate(Date=max(x3$Date),Pollster="פרויקט 61")%>%
arrange(desc(Date),desc(Mandates))%>%ungroup
rm(list=ls(pattern = ("[^x*|fac_vars|fac_vars.df|project61|party|remove_geom]")))
input=data.frame(poll=c(1,5))
a=x%>%mutate(Dateid=factor(Date),DatePoll=factor(paste(Dateid,Pollsterid,sep=".")))
nt=tail(levels(a$DatePoll),input$poll[2])
nt=tail(nt,input$poll[2]-input$poll[1]-1)
a=a%>%filter(DatePoll%in%nt)
a$nr=1:nrow(a)
input=data.frame(Boot=500)
out=ddply(a%>%select(Mandates.lb,Mandates.ub,nr),.(nr),
.fun = function(df) {
B=input$Boot
mout=cbind(as.matrix(sample(as.numeric(df[1]):as.numeric(df[2]),B,replace=T),ncol=1),1:B)
})
names(out)[-1]=c("rMandates","bs.id")
a=left_join(out,a,by=c("nr"))
a=a%>%group_by(bs.id,Party)%>%summarise_each(funs(mean(.,na.rm = T)),Mandates,rMandates)%>%
mutate(rMandates=ifelse(floor(rMandates)<4,0,floor(rMandates)),
Mandates=ifelse(floor(Mandates)<4,0,floor(Mandates)))%>%arrange(Party)
df=melt(a,id=c("bs.id","Party"),value.name = "base")
df$base=df$base+runif(nrow(df))*1e-3
df=df%>%group_by(bs.id,variable)%>%
mutate(base=120*base/sum(base),
base.floor=floor(base),
pct=base/(base.floor+1),
add=0,id=0,
share=factor(Party,labels=c(1,1,2,3,4,5,6,6,2,7,3)))
#hagenbach-bischoff system
df=ddply(df,.(bs.id,variable),.fun = function(df){
for(i in (1:(120-sum(df$base.floor)))){
y1=(df%>%group_by(share)%>%summarise(group_pct=sum(base)/(sum(base.floor)+1))%>%filter(group_pct==max(group_pct)))$share
id=df$pct%in%max(df$pct[df$share==y1])
df$id[id]=i
df$base.floor[id]=df$base.floor[id]+1
df$add[id]=df$add[id]+1
df$pct[id]=df$base[id]/(df$base.floor[id]+1)}
return(df)
})
Party.En=x%>%filter(Election==2015)%>%select(Party,Party.En)%>%unique
df=left_join(df,Party.En,by="Party")
fill_var="Party"
pos="dodge"
yint=4
b.id=sample(1:input$Boot,1)
input=data.frame(Boot=500,sim.lang="")
input=data.frame(Boot=500,lang.sim="")
df=lin$df.full
base.lvl=df%>%filter(variable=="rMandates")%>%count(Party.En,Party,base.floor)
txt.lvl=df%>%filter(variable=="Mandates")%>%group_by(Party.En,Party)%>%summarise(base.floor=floor(mean(base.floor)))
txt.lvl=left_join(txt.lvl,base.lvl,by=c("Party.En","Party","base.floor"))
str_fill=paste0("Party",input$lang.sim)
if(input$lang.sim==""){
xl="מנדטים"
xl=paste0(xl,"\n \n https:\\\\yonicd.shinyapps.io\\Elections")
yl=""
ttl=paste("התפלגות סימולציה לחלוקה סופית של מנדטים לאחר אחוז החסימה וסיווג עודפים לפי מפלגה",
"משולש מהווה חציון המנדטים למפלגה על פי הסקרים בפועל",sep="\n")
nm="מפלגה"
}else{
xl="Mandates"
xl=paste0(xl,"\n \n https:\\\\yonicd.shinyapps.io\\Elections")
yl=""
ttl="Distribution of Simulated of Mandate Results Conditioned on Mandate Threshold and Surplus Vote Agreements \n Triangle shows the Median Published Result"
nm="Party"
}
base.lvl$n=base.lvl$n/as.numeric(input$Boot)
txt.lvl$n=txt.lvl$n/as.numeric(input$Boot)
p=ggplot(base.lvl)+
geom_bar(aes_string(x="factor(base.floor)",y="n",fill=str_fill),stat="identity",position = "dodge")+
geom_point(aes(x=factor(base.floor),y=n+.02),size=3,shape=17,data=txt.lvl)+
facet_wrap(as.formula(paste0("~",str_fill)),scales="free_x")+theme_bw()+
ggtitle(ttl)+ylab(yl)+xlab(xl)+scale_fill_discrete(name=nm)+scale_y_continuous(label=percent)
p
p+theme(text=12)
p+theme(text=element_size(size=12))
p+theme(text=element_text(size=12))
p+theme(text=element_text(size=16))
max(x$Date)
ttl=paste("התפלגות סימולציה לחלוקה סופית של מנדטים לאחר אחוז החסימה וסיווג עודפים לפי מפלגה",
"משולש מהווה חציון המנדטים למפלגה על פי הסקרים בפועל",
max(x$Date),sep="\n")
p=ggplot(base.lvl)+
geom_bar(aes_string(x="factor(base.floor)",y="n",fill=str_fill),stat="identity",position = "dodge")+
geom_point(aes(x=factor(base.floor),y=n+.02),size=3,shape=17,data=txt.lvl)+
facet_wrap(as.formula(paste0("~",str_fill)),scales="free_x")+theme_bw()+
ggtitle(ttl)+ylab(yl)+xlab(xl)+scale_fill_discrete(name=nm)+scale_y_continuous(label=percent)
p+theme(text=element_text(size=16))
input=data.frame(poll=c(1,5))
a=x%>%mutate(Dateid=factor(Date),DatePoll=factor(paste(Dateid,Pollsterid,sep=".")))
nt=tail(levels(a$DatePoll),input$poll[2])
nt=tail(nt,input$poll[2]-input$poll[1]-1)
a=a%>%filter(DatePoll%in%nt)
a$nr=1:nrow(a)
unique(a$Date)
a=x%>%mutate(Dateid=factor(Date),DatePoll=factor(paste(Dateid,Pollsterid,sep=".")))
nt=tail(levels(a$DatePoll),input$poll[2])
input$poll[2]-input$poll[1]-1
nt=tail(nt,input$poll[2]-input$poll[1]+1)
a=a%>%filter(DatePoll%in%nt)
unique(a$Date)
nt
max(a$Date)
maxdate=max(a$Date)
out=ddply(a%>%select(Mandates.lb,Mandates.ub,nr),.(nr),
.fun = function(df) {
B=input$Boot
mout=cbind(as.matrix(sample(as.numeric(df[1]):as.numeric(df[2]),B,replace=T),ncol=1),1:B)
})
names(out)[-1]=c("rMandates","bs.id")
a=left_join(out,a,by=c("nr"))
a=a%>%group_by(bs.id,Party)%>%summarise_each(funs(mean(.,na.rm = T)),Mandates,rMandates)%>%
mutate(rMandates=ifelse(floor(rMandates)<4,0,floor(rMandates)),
Mandates=ifelse(floor(Mandates)<4,0,floor(Mandates)))%>%arrange(Party)
df=melt(a,id=c("bs.id","Party"),value.name = "base")
df$base=df$base+runif(nrow(df))*1e-3
df=df%>%group_by(bs.id,variable)%>%
mutate(base=120*base/sum(base),
base.floor=floor(base),
pct=base/(base.floor+1),
add=0,id=0,
share=factor(Party,labels=c(1,1,2,3,4,5,6,6,2,7,3)))
#hagenbach-bischoff system
df=ddply(df,.(bs.id,variable),.fun = function(df){
for(i in (1:(120-sum(df$base.floor)))){
y1=(df%>%group_by(share)%>%summarise(group_pct=sum(base)/(sum(base.floor)+1))%>%filter(group_pct==max(group_pct)))$share
id=df$pct%in%max(df$pct[df$share==y1])
df$id[id]=i
df$base.floor[id]=df$base.floor[id]+1
df$add[id]=df$add[id]+1
df$pct[id]=df$base[id]/(df$base.floor[id]+1)}
return(df)
})
Party.En=x%>%filter(Election==2015)%>%select(Party,Party.En)%>%unique
df=left_join(df,Party.En,by="Party")
fill_var="Party"
pos="dodge"
yint=4
b.id=sample(1:input$Boot,1)
a=x%>%mutate(Dateid=factor(Date),DatePoll=factor(paste(Dateid,Pollsterid,sep=".")))
nt=tail(levels(a$DatePoll),input$poll[2])
nt=tail(nt,input$poll[2]-input$poll[1]+1)
a=a%>%filter(DatePoll%in%nt)
maxdate=max(a$Date)
a$nr=1:nrow(a)
input=data.frame(Boot=500,lang.sim="")
out=ddply(a%>%select(Mandates.lb,Mandates.ub,nr),.(nr),
.fun = function(df) {
B=input$Boot
mout=cbind(as.matrix(sample(as.numeric(df[1]):as.numeric(df[2]),B,replace=T),ncol=1),1:B)
})
names(out)[-1]=c("rMandates","bs.id")
a=left_join(out,a,by=c("nr"))
a=a%>%group_by(bs.id,Party)%>%summarise_each(funs(mean(.,na.rm = T)),Mandates,rMandates)%>%
mutate(rMandates=ifelse(floor(rMandates)<4,0,floor(rMandates)),
Mandates=ifelse(floor(Mandates)<4,0,floor(Mandates)))%>%arrange(Party)
df=melt(a,id=c("bs.id","Party"),value.name = "base")
df$base=df$base+runif(nrow(df))*1e-3
df=df%>%group_by(bs.id,variable)%>%
mutate(base=120*base/sum(base),
base.floor=floor(base),
pct=base/(base.floor+1),
add=0,id=0,
share=factor(Party,labels=c(1,1,2,3,4,5,6,6,2,7,3)))
#hagenbach-bischoff system
df=ddply(df,.(bs.id,variable),.fun = function(df){
for(i in (1:(120-sum(df$base.floor)))){
y1=(df%>%group_by(share)%>%summarise(group_pct=sum(base)/(sum(base.floor)+1))%>%filter(group_pct==max(group_pct)))$share
id=df$pct%in%max(df$pct[df$share==y1])
df$id[id]=i
df$base.floor[id]=df$base.floor[id]+1
df$add[id]=df$add[id]+1
df$pct[id]=df$base[id]/(df$base.floor[id]+1)}
return(df)
})
Party.En=x%>%filter(Election==2015)%>%select(Party,Party.En)%>%unique
df=left_join(df,Party.En,by="Party")
fill_var="Party"
pos="dodge"
yint=4
b.id=sample(1:input$Boot,1)
base.lvl=df%>%filter(variable=="rMandates")%>%count(Party.En,Party,base.floor)
txt.lvl=df%>%filter(variable=="Mandates")%>%group_by(Party.En,Party)%>%summarise(base.floor=floor(mean(base.floor)))
txt.lvl=left_join(txt.lvl,base.lvl,by=c("Party.En","Party","base.floor"))
str_fill=paste0("Party",input$lang.sim)
if(input$lang.sim==""){
xl="מנדטים"
xl=paste0(xl,"\n \n https:\\\\yonicd.shinyapps.io\\Elections")
yl=""
ttl=paste("התפלגות סימולציה לחלוקה סופית של מנדטים לאחר אחוז החסימה וסיווג עודפים לפי מפלגה",
"משולש מהווה חציון המנדטים למפלגה על פי הסקרים בפועל",
maxdate,sep="\n")
nm="מפלגה"
}else{
xl="Mandates"
xl=paste0(xl,"\n \n https:\\\\yonicd.shinyapps.io\\Elections")
yl=""
ttl=paste0("Distribution of Simulated of Mandate Results Conditioned on Mandate Threshold and Surplus Vote Agreements \n Triangle shows the Median Published Result",maxdate,sep="\n")
nm="Party"
}
base.lvl$n=base.lvl$n/as.numeric(input$Boot)
txt.lvl$n=txt.lvl$n/as.numeric(input$Boot)
p=ggplot(base.lvl)+
geom_bar(aes_string(x="factor(base.floor)",y="n",fill=str_fill),stat="identity",position = "dodge")+
geom_point(aes(x=factor(base.floor),y=n+.02),size=3,shape=17,data=txt.lvl)+
facet_wrap(as.formula(paste0("~",str_fill)),scales="free_x")+theme_bw()+
ggtitle(ttl)+ylab(yl)+xlab(xl)+scale_fill_discrete(name=nm)+scale_y_continuous(label=percent)
p+theme(text=element_text(size=16))
shiny::runApp()
shiny::runApp()
