geom_line(aes(y=roll.mean,colour=Candidate))+
geom_ribbon(aes(ymin=roll.mean-roll.sd,ymax=roll.mean+roll.sd,fill=Candidate),alpha=.5)+
facet_wrap(Party~Candidate,ncol=2)+theme_bw()+
geom_point(aes(x=Date,y=Results,colour=Candidate,shape=State),
data=State.Polls%>%
filter(!Candidate%in%c("Christie","Fiorina","Carson","Bush")&Date==max(Date)))+
ggtitle("Rolling Mean and Standard Deviation (Window 7 days) \n Ribbon:Mean +/- 1 Sd, Points are last day polls published")+
ylab("Percent")
State.roll%>%
ggplot(aes(x=Date))+
geom_line(aes(y=roll.mean,colour=Candidate))+
geom_ribbon(aes(ymin=roll.mean-roll.sd,ymax=roll.mean+roll.sd,fill=Candidate),alpha=.5)+
facet_wrap(Party~Candidate,ncol=2)+theme_bw()+
geom_point(aes(x=Date,y=Results,colour=Candidate,shape=State),size=2,
data=State.Polls%>%
filter(!Candidate%in%c("Christie","Fiorina","Carson","Bush")&Date==max(Date)))+
ggtitle("Rolling Mean and Standard Deviation (Window 7 days) \n Ribbon:Mean +/- 1 Sd, Points are last day polls published")+
ylab("Percent")
ggplotly()
state.abb
cbind(sata.name,state.abb)
cbind(sate.name,state.abb)
cbind(state.name,state.abb)
data.frame(state.name,state.abb)
data.frame(State=state.name,State.Abb=state.abb)
State.Polls1=State.Polls%>%left_join(data.frame(State=state.name,State.Abb=state.abb),by="State")
State.Polls1=State.Polls%>%left_join(data.frame(State=state.name,State.Abb=state.abb,stringsAsFactors = F),by="State")
View(State.Polls1)
State.Polls=ddply(url.in,.(Party),.fun = function(df){
x=read_html(df$URL)
x1=x%>%html_table(header = T)
names(x1)=seq(1,length(x1))
x2=ldply(x1[seq(2,60,2)],.fun = function(y) y%>%select(-Spread),.id = "id")%>%mutate(id=as.numeric(id))
x3=ldply(x1[seq(1,59,2)],.fun = function(y) data.frame(Date=strptime(names(y[1]),"%A, %B %d")),.id="id")%>%mutate(id=as.numeric(id))
x3=x3%>%left_join(x2,"id")%>%select(-id)
names(x3)[2]="Race"
x3$State=stringi::stri_trim_both(gsub('Democratic|Republican|Presidential|Primary|Caucus','',x3$Race))
x3$State[grepl('Nomination',x3$State)]='General Election'
x3$id=seq(1,nrow(x3))
x4=ddply(x3,.(id),.fun = function(x.in){
Candidate=unlist(lapply(strsplit(x.in$Results,", ")[[1]],function(x) gsub('[0-9 ]','',x[1])))
Results=unlist(lapply(strsplit(x.in$Results,", ")[[1]],function(x) as.numeric(gsub('[aA-zZ ]','',x[1]))))
x.out=data.frame(Candidate,Results)%>%do(.,filter(.,complete.cases(.)))%>%mutate(Date=x.in$Date,Poll=x.in$Poll,State=x.in$State)
return(x.out)
})%>%select(-id)
return(x4)
})
State.Polls=State.Polls%>%left_join(State.Polls%>%filter(State=="General Election")%>%group_by(Candidate)%>%do(head(.,5))%>%summarise(GenMean=mean(Results),GenSd=sd(Results)),by="Candidate")%>%left_join(data.frame(State=state.name,State.Abb=state.abb),by="State")%>%
left_join(data.frame(State=state.name,State.Abb=state.abb,stringsAsFactors = F),by="State")
View(State.Polls)
State.Polls=ddply(url.in,.(Party),.fun = function(df){
x=read_html(df$URL)
x1=x%>%html_table(header = T)
names(x1)=seq(1,length(x1))
x2=ldply(x1[seq(2,60,2)],.fun = function(y) y%>%select(-Spread),.id = "id")%>%mutate(id=as.numeric(id))
x3=ldply(x1[seq(1,59,2)],.fun = function(y) data.frame(Date=strptime(names(y[1]),"%A, %B %d")),.id="id")%>%mutate(id=as.numeric(id))
x3=x3%>%left_join(x2,"id")%>%select(-id)
names(x3)[2]="Race"
x3$State=stringi::stri_trim_both(gsub('Democratic|Republican|Presidential|Primary|Caucus','',x3$Race))
x3$State[grepl('Nomination',x3$State)]='General Election'
x3$id=seq(1,nrow(x3))
x4=ddply(x3,.(id),.fun = function(x.in){
Candidate=unlist(lapply(strsplit(x.in$Results,", ")[[1]],function(x) gsub('[0-9 ]','',x[1])))
Results=unlist(lapply(strsplit(x.in$Results,", ")[[1]],function(x) as.numeric(gsub('[aA-zZ ]','',x[1]))))
x.out=data.frame(Candidate,Results)%>%do(.,filter(.,complete.cases(.)))%>%mutate(Date=x.in$Date,Poll=x.in$Poll,State=x.in$State)
return(x.out)
})%>%select(-id)
return(x4)
})
View(State.Polls)
rm(State.Polls1)
State.Polls1=State.Polls%>%left_join(State.Polls%>%filter(State=="General Election")%>%group_by(Candidate)%>%do(head(.,5))%>%summarise(GenMean=mean(Results),GenSd=sd(Results)),by="Candidate")%>%left_join(data.frame(State=state.name,State.Abb=state.abb),by="State")%>%
left_join(data.frame(State=state.name,State.Abb=state.abb,stringsAsFactors = F),by="State")
View(State.Polls1)
State.Polls1=State.Polls%>%left_join(State.Polls%>%filter(State=="General Election")%>%group_by(Candidate)%>%do(head(.,5))%>%summarise(GenMean=mean(Results),GenSd=sd(Results)),by="Candidate")%>%
left_join(data.frame(State=state.name,State.Abb=state.abb,stringsAsFactors = F),by="State")
View(State.Polls1)
State.Polls=ddply(url.in,.(Party),.fun = function(df){
x=read_html(df$URL)
x1=x%>%html_table(header = T)
names(x1)=seq(1,length(x1))
x2=ldply(x1[seq(2,60,2)],.fun = function(y) y%>%select(-Spread),.id = "id")%>%mutate(id=as.numeric(id))
x3=ldply(x1[seq(1,59,2)],.fun = function(y) data.frame(Date=strptime(names(y[1]),"%A, %B %d")),.id="id")%>%mutate(id=as.numeric(id))
x3=x3%>%left_join(x2,"id")%>%select(-id)
names(x3)[2]="Race"
x3$State=stringi::stri_trim_both(gsub('Democratic|Republican|Presidential|Primary|Caucus|[0-9]','',x3$Race))
x3$State[grepl('Nomination',x3$State)]='General Election'
x3$id=seq(1,nrow(x3))
x4=ddply(x3,.(id),.fun = function(x.in){
Candidate=unlist(lapply(strsplit(x.in$Results,", ")[[1]],function(x) gsub('[0-9 ]','',x[1])))
Results=unlist(lapply(strsplit(x.in$Results,", ")[[1]],function(x) as.numeric(gsub('[aA-zZ ]','',x[1]))))
x.out=data.frame(Candidate,Results)%>%do(.,filter(.,complete.cases(.)))%>%mutate(Date=x.in$Date,Poll=x.in$Poll,State=x.in$State)
return(x.out)
})%>%select(-id)
return(x4)
})
State.Polls1=State.Polls%>%left_join(State.Polls%>%filter(State=="General Election")%>%group_by(Candidate)%>%do(head(.,5))%>%summarise(GenMean=mean(Results),GenSd=sd(Results)),by="Candidate")%>%
left_join(data.frame(State=state.name,State.Abb=state.abb,stringsAsFactors = F),by="State")
View(State.Polls1)
State.Polls1=State.Polls%>%left_join(State.Polls%>%filter(State=="General Election")%>%group_by(Candidate)%>%do(head(.,5))%>%summarise(GenMean=mean(Results),GenSd=sd(Results)),by="Candidate")%>%
left_join(data.frame(State=state.name,State.Abb=state.abb,stringsAsFactors = F),by="State")%>%
mutate(State.Abb=ifelse(is.na(State.Abb),"US",State.Abb))
View(State.Polls1)
rm(State.Polls1)
State.Polls=State.Polls%>%left_join(State.Polls%>%filter(State=="General Election")%>%group_by(Candidate)%>%do(head(.,5))%>%summarise(GenMean=mean(Results),GenSd=sd(Results)),by="Candidate")%>%
left_join(data.frame(State=state.name,State.Abb=state.abb,stringsAsFactors = F),by="State")%>%
mutate(State.Abb=ifelse(is.na(State.Abb),"US",State.Abb))
State.roll=State.Polls%>%filter(!Candidate%in%c("Christie","Fiorina","Carson","Bush"))%>%arrange(Party,Candidate,Date)%>%
group_by(Date,Party,Candidate)%>%summarise_each(funs(mean),Results)%>%group_by(Party,Candidate)%>%
do(.,data.frame(roll.sd=zoo:::rollapplyr(.$Results,width=7,FUN=sd,fill=NA),roll.mean=zoo:::rollapplyr(.$Results,width=7,FUN=mean,fill=NA)))
State.roll$Date=(State.Polls%>%filter(!Candidate%in%c("Christie","Fiorina","Carson","Bush"))%>%select(Candidate,Date)%>%arrange(Candidate,Date)%>%distinct)$Date
State.roll%>%
ggplot(aes(x=Date))+
geom_line(aes(y=roll.mean,colour=Candidate))+
geom_ribbon(aes(ymin=roll.mean-roll.sd,ymax=roll.mean+roll.sd,fill=Candidate),alpha=.5)+
facet_wrap(Party~Candidate,ncol=2)+theme_bw()+
geom_text(aes(x=Date,y=Results,group=Candidate,label=State.Abb),
data=State.Polls%>%
filter(!Candidate%in%c("Christie","Fiorina","Carson","Bush")&Date==max(Date)))+
ggtitle("Rolling Mean and Standard Deviation (Window 7 days) \n Ribbon:Mean +/- 1 Sd, Points are last day polls published")+
ylab("Percent")
data=State.Polls%>%
filter(!Candidate%in%c("Christie","Fiorina","Carson","Bush")&Date==max(Date))
rm(data)
State.Polls%>%
filter(!Candidate%in%c("Christie","Fiorina","Carson","Bush")&Date==max(Date))
View(State.Polls)
State.Polls%>%filter(!Candidate%in%c("Christie","Fiorina","Carson","Bush")&Date==max(Date))
State.Polls%>%filter(!Candidate%in%c("Christie","Fiorina","Carson","Bush")&Date>=max(Date)-1)
State.Polls%>%ungroup%>%filter(!Candidate%in%c("Christie","Fiorina","Carson","Bush")&Date>=max(Date)-1)
State.Polls%>%count(Candidate)
State.roll%>%
ggplot(aes(x=Date))+
geom_line(aes(y=roll.mean,colour=Candidate))+
geom_ribbon(aes(ymin=roll.mean-roll.sd,ymax=roll.mean+roll.sd,fill=Candidate),alpha=.5)+
facet_wrap(Party~Candidate,ncol=2)+theme_bw()+
geom_text(aes(x=Date,y=Results,colour=Candidate,label=State.Abb),
data=State.Polls%>%
filter(!Candidate%in%c("Christie","Fiorina","Carson","Bush")&Date==max(Date)))+
ggtitle("Rolling Mean and Standard Deviation (Window 7 days) \n Ribbon:Mean +/- 1 Sd, Points are last day polls published")+
ylab("Percent")
State.roll%>%
ggplot(aes(x=Date))+
geom_line(aes(y=roll.mean,colour=Candidate))+
geom_ribbon(aes(ymin=roll.mean-roll.sd,ymax=roll.mean+roll.sd,fill=Candidate),alpha=.5)+
facet_wrap(Party~Candidate,ncol=2)+theme_bw()+
geom_text(aes(y=Results,colour=Candidate,label=State.Abb),
data=State.Polls%>%
filter(!Candidate%in%c("Christie","Fiorina","Carson","Bush")&Date==max(Date)))+
ggtitle("Rolling Mean and Standard Deviation (Window 7 days) \n Ribbon:Mean +/- 1 Sd, Points are last day polls published")+
ylab("Percent")
State.Polls%>%filter(Date==max(Date))
View(State.Polls)
State.Polls%>%group_by(Candidate)%>%filter(Date==max(Date))
State.roll%>%
ggplot(aes(x=Date))+
geom_line(aes(y=roll.mean,colour=Candidate))+
geom_ribbon(aes(ymin=roll.mean-roll.sd,ymax=roll.mean+roll.sd,fill=Candidate),alpha=.5)+
facet_wrap(Party~Candidate,ncol=2)+theme_bw()+
geom_text(aes(y=Results,colour=Candidate,label=State.Abb),
data=State.Polls%>%group_by(Candidate)%>%
filter(!Candidate%in%c("Christie","Fiorina","Carson","Bush")&Date==max(Date)))+
ggtitle("Rolling Mean and Standard Deviation (Window 7 days) \n Ribbon:Mean +/- 1 Sd, Points are last day polls published")+
ylab("Percent")
State.roll%>%
ggplot(aes(x=Date))+
geom_line(aes(y=roll.mean,colour=Candidate))+
geom_ribbon(aes(ymin=roll.mean-roll.sd,ymax=roll.mean+roll.sd,fill=Candidate),alpha=.5)+
facet_wrap(Party~Candidate,ncol=2)+theme_bw()+
geom_text(nudge_x = T,aes(y=Results,colour=Candidate,label=State.Abb),
data=State.Polls%>%group_by(Candidate)%>%
filter(!Candidate%in%c("Christie","Fiorina","Carson","Bush")&Date==max(Date)))+
ggtitle("Rolling Mean and Standard Deviation (Window 7 days) \n Ribbon:Mean +/- 1 Sd, Points are last day polls published")+
ylab("Percent")
State.roll%>%
ggplot(aes(x=Date))+
geom_line(aes(y=roll.mean,colour=Candidate))+
geom_ribbon(aes(ymin=roll.mean-roll.sd,ymax=roll.mean+roll.sd,fill=Candidate),alpha=.5)+
facet_wrap(Party~Candidate,ncol=2)+theme_bw()+
geom_text(nudge_x = .5,aes(y=Results,colour=Candidate,label=State.Abb),
data=State.Polls%>%group_by(Candidate)%>%
filter(!Candidate%in%c("Christie","Fiorina","Carson","Bush")&Date==max(Date)))+
ggtitle("Rolling Mean and Standard Deviation (Window 7 days) \n Ribbon:Mean +/- 1 Sd, Points are last day polls published")+
ylab("Percent")
State.roll%>%
ggplot(aes(x=Date))+
geom_line(aes(y=roll.mean,colour=Candidate))+
geom_ribbon(aes(ymin=roll.mean-roll.sd,ymax=roll.mean+roll.sd,fill=Candidate),alpha=.5)+
facet_wrap(Party~Candidate,ncol=2)+theme_bw()+
geom_text(nudge_y = .5,aes(y=Results,colour=Candidate,label=State.Abb),
data=State.Polls%>%group_by(Candidate)%>%
filter(!Candidate%in%c("Christie","Fiorina","Carson","Bush")&Date==max(Date)))+
ggtitle("Rolling Mean and Standard Deviation (Window 7 days) \n Ribbon:Mean +/- 1 Sd, Points are last day polls published")+
ylab("Percent")
State.roll%>%
ggplot(aes(x=Date))+
geom_line(aes(y=roll.mean,colour=Candidate))+
geom_ribbon(aes(ymin=roll.mean-roll.sd,ymax=roll.mean+roll.sd,fill=Candidate),alpha=.5)+
facet_wrap(Party~Candidate,ncol=2)+theme_bw()+
geom_text(show.legend=F,nudge_x = 1,aes(y=Results,colour=Candidate,label=State.Abb),
data=State.Polls%>%group_by(Candidate)%>%
filter(!Candidate%in%c("Christie","Fiorina","Carson","Bush")&Date==max(Date)))+
ggtitle("Rolling Mean and Standard Deviation (Window 7 days) \n Ribbon:Mean +/- 1 Sd, Points are last day polls published")+
ylab("Percent")
State.roll%>%
ggplot(aes(x=Date))+
geom_line(aes(y=roll.mean,colour=Candidate))+
geom_ribbon(aes(ymin=roll.mean-roll.sd,ymax=roll.mean+roll.sd,fill=Candidate),alpha=.5)+
facet_wrap(Party~Candidate,ncol=2)+theme_bw()+
geom_text(show.legend=F,nudge_x = 1,hjust=-1,aes(y=Results,colour=Candidate,label=State.Abb),
data=State.Polls%>%group_by(Candidate)%>%
filter(!Candidate%in%c("Christie","Fiorina","Carson","Bush")&Date==max(Date)))+
ggtitle("Rolling Mean and Standard Deviation (Window 7 days) \n Ribbon:Mean +/- 1 Sd, Points are last day polls published")+
ylab("Percent")
State.roll%>%
ggplot(aes(x=Date))+
geom_line(aes(y=roll.mean,colour=Candidate))+
geom_ribbon(aes(ymin=roll.mean-roll.sd,ymax=roll.mean+roll.sd,fill=Candidate),alpha=.5)+
facet_wrap(Party~Candidate,ncol=2)+theme_bw()+
geom_text(show.legend=F,nudge_x = 1,hjust=-.5,aes(y=Results,colour=Candidate,label=State.Abb),
data=State.Polls%>%group_by(Candidate)%>%
filter(!Candidate%in%c("Christie","Fiorina","Carson","Bush")&Date==max(Date)))+
ggtitle("Rolling Mean and Standard Deviation (Window 7 days) \n Ribbon:Mean +/- 1 Sd, Points are last day polls published")+
ylab("Percent")
State.roll%>%
ggplot(aes(x=Date))+
geom_line(aes(y=roll.mean,colour=Candidate))+
geom_ribbon(aes(ymin=roll.mean-roll.sd,ymax=roll.mean+roll.sd,fill=Candidate),alpha=.5)+
facet_wrap(Party~Candidate,ncol=2)+theme_bw()+
geom_text(show.legend=F,aes(y=Results,colour=State.Abb,label=State.Abb),
data=State.Polls%>%group_by(Candidate)%>%
filter(!Candidate%in%c("Christie","Fiorina","Carson","Bush")&Date==max(Date)))+
ggtitle("Rolling Mean and Standard Deviation (Window 7 days) \n Ribbon:Mean +/- 1 Sd, Points are last day polls published")+
ylab("Percent")
State.roll%>%
ggplot(aes(x=Date))+
geom_line(aes(y=roll.mean,group=Candidate))+
geom_ribbon(aes(ymin=roll.mean-roll.sd,ymax=roll.mean+roll.sd,fill=Candidate),alpha=.5)+
facet_wrap(Party~Candidate,ncol=2)+theme_bw()+
geom_text(show.legend=F,aes(y=Results,colour=State.Abb,label=State.Abb),
data=State.Polls%>%group_by(Candidate)%>%
filter(!Candidate%in%c("Christie","Fiorina","Carson","Bush")&Date==max(Date)))+
ggtitle("Rolling Mean and Standard Deviation (Window 7 days) \n Ribbon:Mean +/- 1 Sd, Points are last day polls published")+
ylab("Percent")
State.roll%>%
ggplot(aes(x=Date))+
geom_line(aes(y=roll.mean,group=Candidate))+
geom_ribbon(aes(ymin=roll.mean-roll.sd,ymax=roll.mean+roll.sd,fill=Candidate),alpha=.5)+
facet_wrap(Party~Candidate,ncol=2)+theme_bw()+
geom_text(aes(y=Results,colour=State.Abb,label=State.Abb),
data=State.Polls%>%group_by(Candidate)%>%
filter(!Candidate%in%c("Christie","Fiorina","Carson","Bush")&Date==max(Date)))+
ggtitle("Rolling Mean and Standard Deviation (Window 7 days) \n Ribbon:Mean +/- 1 Sd, Points are last day polls published")+
ylab("Percent")
remove_geom <- function(p, geom) {
layers <- lapply(p$layers, function(x) if(any(grepl(paste0('(?i)',geom),class(x$geom)))) NULL else x)
layers <- layers[!sapply(layers, is.null)]
p$layers <- layers
p
}
load("poll_name.rdata")
df.in=data.frame(Poll.Party=c("Democrat","Republican"),
Poll.URL=c('http://www.realclearpolitics.com/epolls/2016/president/us/2016_democratic_presidential_nomination-3824.html',
'http://www.realclearpolitics.com/epolls/2016/president/us/2016_republican_presidential_nomination-3823.html'),stringsAsFactors = F)
poll=ddply(df.in,.(Poll.Party),.fun = function(df){
x=read_html(df$Poll.URL)
x1=x%>%html_table(header=T)
xt=x1[[4]]
if(!any(names(xt)%in%"MoE")) xt=xt%>%mutate(MoE=NA)
xt$start.Date=unlist(lapply(strsplit(xt$Date," - "),'[',1))
xt$end.Date=unlist(lapply(strsplit(xt$Date," - "),'[',2))
xt$yr=NA
xt$m=str_pad(unlist(lapply(strsplit(xt$end.Date,"/"),'[',1)),width = 2,side = "left",pad = "0")
xt$d=str_pad(unlist(lapply(strsplit(xt$end.Date,"/"),'[',2)),width = 2,side = "left",pad = "0")
xind=which(lapply(strsplit(xt$end.Date,"/"),'[',1)=='12')
xind=c(1,xind[1],xind[which(xind-lag(xind)>1)])
xt$yr[xind]=seq(2016,2012,-1)
xt$yr=na.locf(xt$yr)
xt$Poll.Date=as.Date(paste(xt$yr,xt$m,xt$d),format("%Y%m%d"))
xt=xt%>%select(-c(Date,start.Date,end.Date))
xt=xt%>%melt(.,c("Poll.Date","Poll","Sample","MoE","yr","m","d"))
return(xt)
})%>%distinct
poll=poll%>%mutate_each(funs(as.character),-c(Poll.Date))%>%
mutate_each(funs(ifelse(.=="--",NA,.)),-c(Poll.Date))%>%filter(variable!="Spread")
poll=poll%>%mutate_each(funs(as.numeric),value)
poll=poll%>%left_join(poll.name,by=c("Poll"="old"))
whichWeek <- function(aDate) paste0("0",ceiling(as.numeric(format(aDate, "%d"))/7 ))
#State Polls
url.in=data.frame(Party=c("Republican","Democrat"),
URL=c("http://www.realclearpolitics.com/epolls/latest_polls/gop_pres_primary/",
"http://www.realclearpolitics.com/epolls/latest_polls/dem_pres_primary/"),stringsAsFactors = F)
State.Polls=ddply(url.in,.(Party),.fun = function(df){
x=read_html(df$URL)
x1=x%>%html_table(header = T)
names(x1)=seq(1,length(x1))
x2=ldply(x1[seq(2,60,2)],.fun = function(y) y%>%select(-Spread),.id = "id")%>%mutate(id=as.numeric(id))
x3=ldply(x1[seq(1,59,2)],.fun = function(y) data.frame(Date=strptime(names(y[1]),"%A, %B %d")),.id="id")%>%mutate(id=as.numeric(id))
x3=x3%>%left_join(x2,"id")%>%select(-id)
names(x3)[2]="Race"
x3$State=stringi::stri_trim_both(gsub('Democratic|Republican|Presidential|Primary|Caucus|[0-9]','',x3$Race))
x3$State[grepl('Nomination',x3$State)]='General Election'
x3$id=seq(1,nrow(x3))
x4=ddply(x3,.(id),.fun = function(x.in){
Candidate=unlist(lapply(strsplit(x.in$Results,", ")[[1]],function(x) gsub('[0-9 ]','',x[1])))
Results=unlist(lapply(strsplit(x.in$Results,", ")[[1]],function(x) as.numeric(gsub('[aA-zZ ]','',x[1]))))
x.out=data.frame(Candidate,Results)%>%do(.,filter(.,complete.cases(.)))%>%mutate(Date=x.in$Date,Poll=x.in$Poll,State=x.in$State)
return(x.out)
})%>%select(-id)
return(x4)
})
State.Polls=State.Polls%>%left_join(State.Polls%>%filter(State=="General Election")%>%group_by(Candidate)%>%do(head(.,5))%>%summarise(GenMean=mean(Results),GenSd=sd(Results)),by="Candidate")%>%
left_join(data.frame(State=state.name,State.Abb=state.abb,stringsAsFactors = F),by="State")%>%
mutate(State.Abb=ifelse(is.na(State.Abb),"US",State.Abb))
poll.shiny=poll%>%select(Date=Poll.Date,Year=yr,Month=m,Pollster=V1,Sample,
Party=Poll.Party,Candidate=variable,
Results=value)%>%
mutate(Sample.Type=gsub('[^A-Z]','',Sample),Sample=as.numeric(gsub('[^0-9]','',Sample)),
Weekday=format(Date,"%A"),MonthWeek=whichWeek(Date))%>%
filter(!grepl("Average|Reason-Rupe",Pollster)&Candidate!="Spread")
sample.avg=poll.shiny%>%group_by(Pollster,Sample.Type)%>%summarise(Sample.Mean=floor(mean(Sample,na.rm = T)))
poll.shiny=poll.shiny%>%left_join(sample.avg,by=c("Pollster","Sample.Type"))%>%
mutate(Results=Results,Sample=ifelse(is.na(Sample),Sample.Mean,Sample),
Sample.Error=100*1/sqrt(Sample),
DaysLeft=as.numeric(as.Date("2016-11-08")-Date))%>%select(-Sample.Mean)%>%
filter(Sample.Type%in%c("LV","RV"))
poll.shiny$Sample.Type=factor(poll.shiny$Sample.Type,labels=c("Likely Voter","Registered Voter"))
fac_vars=names(poll.shiny)[c(7,6,4,8,13,1,3,11,10,2)]
fac_vars=c(fac_vars,names(poll.shiny)[!names(poll.shiny)%in%fac_vars])
setwd("C:/Users/yoni/Documents/GitHub/Elections/USA2016/shiny")
load("poll_name.rdata")
df.in=data.frame(Poll.Party=c("Democrat","Republican"),
Poll.URL=c('http://www.realclearpolitics.com/epolls/2016/president/us/2016_democratic_presidential_nomination-3824.html',
'http://www.realclearpolitics.com/epolls/2016/president/us/2016_republican_presidential_nomination-3823.html'),stringsAsFactors = F)
poll=ddply(df.in,.(Poll.Party),.fun = function(df){
x=read_html(df$Poll.URL)
x1=x%>%html_table(header=T)
xt=x1[[4]]
if(!any(names(xt)%in%"MoE")) xt=xt%>%mutate(MoE=NA)
xt$start.Date=unlist(lapply(strsplit(xt$Date," - "),'[',1))
xt$end.Date=unlist(lapply(strsplit(xt$Date," - "),'[',2))
xt$yr=NA
xt$m=str_pad(unlist(lapply(strsplit(xt$end.Date,"/"),'[',1)),width = 2,side = "left",pad = "0")
xt$d=str_pad(unlist(lapply(strsplit(xt$end.Date,"/"),'[',2)),width = 2,side = "left",pad = "0")
xind=which(lapply(strsplit(xt$end.Date,"/"),'[',1)=='12')
xind=c(1,xind[1],xind[which(xind-lag(xind)>1)])
xt$yr[xind]=seq(2016,2012,-1)
xt$yr=na.locf(xt$yr)
xt$Poll.Date=as.Date(paste(xt$yr,xt$m,xt$d),format("%Y%m%d"))
xt=xt%>%select(-c(Date,start.Date,end.Date))
xt=xt%>%melt(.,c("Poll.Date","Poll","Sample","MoE","yr","m","d"))
return(xt)
})%>%distinct
poll=poll%>%mutate_each(funs(as.character),-c(Poll.Date))%>%
mutate_each(funs(ifelse(.=="--",NA,.)),-c(Poll.Date))%>%filter(variable!="Spread")
poll=poll%>%mutate_each(funs(as.numeric),value)
poll=poll%>%left_join(poll.name,by=c("Poll"="old"))
whichWeek <- function(aDate) paste0("0",ceiling(as.numeric(format(aDate, "%d"))/7 ))
poll.shiny=poll%>%select(Date=Poll.Date,Year=yr,Month=m,Pollster=V1,Sample,
Party=Poll.Party,Candidate=variable,
Results=value)%>%
mutate(Sample.Type=gsub('[^A-Z]','',Sample),Sample=as.numeric(gsub('[^0-9]','',Sample)),
Weekday=format(Date,"%A"),MonthWeek=whichWeek(Date))%>%
filter(!grepl("Average|Reason-Rupe",Pollster)&Candidate!="Spread")
sample.avg=poll.shiny%>%group_by(Pollster,Sample.Type)%>%summarise(Sample.Mean=floor(mean(Sample,na.rm = T)))
poll.shiny=poll.shiny%>%left_join(sample.avg,by=c("Pollster","Sample.Type"))%>%
mutate(Results=Results,Sample=ifelse(is.na(Sample),Sample.Mean,Sample),
Sample.Error=100*1/sqrt(Sample),
DaysLeft=as.numeric(as.Date("2016-11-08")-Date))%>%select(-Sample.Mean)%>%
filter(Sample.Type%in%c("LV","RV"))
poll.shiny$Sample.Type=factor(poll.shiny$Sample.Type,labels=c("Likely Voter","Registered Voter"))
fac_vars=names(poll.shiny)[c(7,6,4,8,13,1,3,11,10,2)]
fac_vars=c(fac_vars,names(poll.shiny)[!names(poll.shiny)%in%fac_vars])
View(poll.shiny)
poll.shiny=State.Polls%>%mutate(
#Sample.Type=gsub('[^A-Z]','',Sample),Sample=as.numeric(gsub('[^0-9]','',Sample)),
Month=format(Date,"%b")%>%Weekday=format(Date,"%A"),MonthWeek=whichWeek(Date))
poll.shiny=State.Polls%>%mutate(
#Sample.Type=gsub('[^A-Z]','',Sample),Sample=as.numeric(gsub('[^0-9]','',Sample)),
Month=format(Date,"%b"),Weekday=format(Date,"%A"),MonthWeek=whichWeek(Date))
View(poll.shiny)
poll.shiny=State.Polls%>%select(contains("Gen"))%>%mutate(
#Sample.Type=gsub('[^A-Z]','',Sample),Sample=as.numeric(gsub('[^0-9]','',Sample)),
Month=format(Date,"%b"),Weekday=format(Date,"%A"),MonthWeek=whichWeek(Date))
poll.shiny=State.Polls%>%select(-contains("Gen"))%>%mutate(
#Sample.Type=gsub('[^A-Z]','',Sample),Sample=as.numeric(gsub('[^0-9]','',Sample)),
Month=format(Date,"%b"),Weekday=format(Date,"%A"),MonthWeek=whichWeek(Date))
View(poll.shiny)
poll.shiny=State.Polls%>%select(-contains("Gen"))%>%mutate(
#Sample.Type=gsub('[^A-Z]','',Sample),Sample=as.numeric(gsub('[^0-9]','',Sample)),
Month=format(Date,"%b"),Weekday=format(Date,"%A"),MonthWeek=whichWeek(Date),
DaysLeft=as.numeric(as.Date("2016-07-25")-Date))
poll.shiny=State.Polls%>%select(-contains("Gen"))%>%mutate(
#Sample.Type=gsub('[^A-Z]','',Sample),Sample=as.numeric(gsub('[^0-9]','',Sample)),
Month=format(Date,"%b"),Weekday=format(Date,"%A"),MonthWeek=whichWeek(Date),
DaysLeft=as.numeric(as.Date("2016-07-25")-as.Date(Date)))
View(poll.shiny)
names(poll.shiny)
names(poll.shiny)[c(2,6,7,5,1,11,8:10)]
fac_vars=names(poll.shiny)[c(2,6,7,5,1,11,8:10)]
shiny::runApp()
shiny::runApp()
shiny::runApp()
names(poll.shiny)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
State.roll%>%
ggplot(aes(x=Date))+
geom_line(aes(y=roll.mean,colour=Candidate))
State.roll=State.Polls%>%filter(!Candidate%in%c("Christie","Fiorina","Carson","Bush"))%>%arrange(Party,Candidate,Date)%>%
group_by(Date,Party,Candidate)%>%summarise_each(funs(mean),Results)%>%group_by(Party,Candidate)%>%
do(.,data.frame(roll.sd=zoo:::rollapplyr(.$Results,width=7,FUN=sd,fill=NA),roll.mean=zoo:::rollapplyr(.$Results,width=7,FUN=mean,fill=NA)))
State.roll$Date=(State.Polls%>%filter(!Candidate%in%c("Christie","Fiorina","Carson","Bush"))%>%select(Candidate,Date)%>%arrange(Candidate,Date)%>%distinct)$Date
State.roll%>%ggplot(aes(x=Date))+geom_line(aes(y=roll.mean,group=Candidate))
State.roll%>%ggplot(aes(x=Date))+geom_line(aes(y=roll.mean,colour=Candidate))
State.roll%>%ggplot(aes(x=Date))+geom_line(aes(y=roll.mean,colour=NA))
State.roll%>%ggplot(aes(x=Date))+geom_line(aes(y=roll.mean,colour=NULL))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
p
p$layers
p$layers
p$data
input$fill_var
input$fill_var
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
State.roll%>%
ggplot(aes(x=Date))+
geom_line(aes(y=roll.mean,group=Candidate))+
geom_ribbon(aes(ymin=roll.mean-roll.sd,ymax=roll.mean+roll.sd,fill=Candidate),alpha=.5)+
facet_wrap(Party~Candidate,ncol=2)+theme_bw()+
geom_text(aes(y=Results,colour=State.Abb,label=State.Abb),
data=State.Polls%>%group_by(Candidate)%>%
filter(!Candidate%in%c("Christie","Fiorina","Carson","Bush")&Date==max(Date)))+
ggtitle("Rolling Mean and Standard Deviation (7 Day Window) \n Ribbon:Mean +/- 1 Sd, Points are last day polls published")+
ylab("Percent")+scale_colour_discrete(name="Race")
State.roll%>%
ggplot(aes(x=Date))+
geom_line(aes(y=roll.mean,group=Candidate))+
geom_ribbon(aes(ymin=roll.mean-roll.sd,ymax=roll.mean+roll.sd,fill=Candidate),alpha=.5)+
facet_wrap(Party~Candidate,ncol=2)+theme_bw()+
geom_text(aes(y=Results,colour=State.Abb,label=State.Abb),
data=State.Polls%>%group_by(Candidate)%>%
filter(!Candidate%in%c("Christie","Fiorina","Carson","Bush")&Date==max(Date)))+
ggtitle("Rolling Mean and Standard Deviation (7 Day Window) \n Ribbon:Mean +/- 1 Sd, Points are last day polls published")+
ylab("Percent")+scale_colour_discrete(name="Race")+theme(legend.position="top")
shiny::runApp()
shiny::runApp()
